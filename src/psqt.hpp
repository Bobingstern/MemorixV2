#include <stdint.h>
#include <ctype.h>
#include <stdlib.h>
#include <string.h>

#define MakeScore(mg, eg) ((int32_t)((uint32_t)(eg) << 16) + (mg))
#define S(mg, eg) MakeScore((mg), (eg))
#define MgScore(s) ((int16_t)((uint16_t)((uint32_t)((s)))))
#define EgScore(s) ((int16_t)((uint16_t)((uint32_t)((s) + 0x8000) >> 16)))

// PSQT are in the pov of BLACK
// Makes it easier to visualize cuz no mirroring is required (remember A1 is 0 and H8 is 63)

#ifdef DEV
  const int32_t PSQT[7][64] = {
    {S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(-3, 129), S(-14, 136), S(100, 79), S(161, 71), S(132, 75), S(121, 113), S(144, 122), S(129, 133), S(-14, 49), S(44, 49), S(75, 18), S(40, 36), S(30, 46), S(20, 64), S(7, 83), S(-32, 86), S(-21, -28), S(-1, -22), S(11, -41), S(4, -41), S(-7, -38), S(-17, -14), S(-12, -3), S(-31, 8), S(-21, -47), S(0, -40), S(-12, -50), S(-11, -50), S(-23, -49), S(-21, -47), S(-19, -22), S(-31, -23), S(-13, -55), S(4, -41), S(-11, -45), S(-14, -41), S(-25, -42), S(-29, -43), S(-23, -29), S(-31, -32), S(-14, -59), S(9, -34), S(-3, -30), S(-31, -22), S(-30, -30), S(-35, -27), S(-24, -20), S(-29, -23), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), },
    {S(-70, -133), S(0, -10), S(-76, 32), S(72, -17), S(4, -17), S(-80, 5), S(-91, -23), S(-105, -113), S(55, -58), S(7, -17), S(93, -32), S(62, 4), S(50, 15), S(45, -18), S(10, -28), S(12, -53), S(38, -26), S(57, -1), S(98, 22), S(82, 9), S(51, 23), S(45, 20), S(29, -6), S(-2, -38), S(43, -9), S(19, 30), S(52, 32), S(27, 39), S(54, 30), S(39, 20), S(29, -2), S(23, -35), S(33, -14), S(57, 2), S(30, 26), S(36, 27), S(27, 26), S(21, 21), S(22, -9), S(13, -37), S(12, -52), S(20, -15), S(14, -16), S(30, 0), S(22, 4), S(7, -15), S(6, -26), S(0, -77), S(15, -41), S(-9, -42), S(10, -42), S(3, -19), S(15, -23), S(-2, -40), S(-21, -27), S(-9, -64), S(-28, -127), S(11, -69), S(15, -51), S(14, -43), S(2, -41), S(-25, -60), S(12, -93), S(-62, -109), },
    {S(15, -27), S(72, -49), S(-105, -20), S(-57, -25), S(-53, -19), S(-94, -11), S(-40, -20), S(-8, -16), S(-6, -39), S(-4, -28), S(27, -41), S(13, -34), S(14, -34), S(28, -38), S(36, -32), S(0, -39), S(17, -32), S(64, -35), S(51, -25), S(69, -46), S(47, -45), S(66, -40), S(41, -33), S(25, -33), S(21, -34), S(41, -27), S(59, -40), S(48, -31), S(68, -35), S(42, -45), S(49, -35), S(18, -47), S(34, -48), S(40, -41), S(33, -40), S(51, -40), S(43, -37), S(39, -33), S(33, -52), S(29, -59), S(57, -44), S(43, -57), S(39, -43), S(36, -37), S(39, -39), S(35, -44), S(35, -47), S(26, -58), S(49, -85), S(44, -57), S(30, -65), S(30, -48), S(25, -55), S(41, -63), S(36, -76), S(40, -67), S(38, -63), S(34, -55), S(33, -55), S(22, -58), S(10, -58), S(33, -75), S(41, -54), S(42, -71), },
    {S(59, -26), S(63, -26), S(3, -6), S(-17, -1), S(-23, -4), S(-43, 7), S(-2, -12), S(0, -18), S(23, -35), S(6, -26), S(25, -36), S(-12, -4), S(-4, -6), S(-17, -8), S(-42, -6), S(-29, -13), S(14, -34), S(70, -55), S(55, -34), S(37, -41), S(28, -35), S(2, -20), S(9, -33), S(-32, -18), S(-3, -35), S(14, -42), S(18, -38), S(6, -30), S(16, -35), S(-7, -26), S(-23, -28), S(-35, -29), S(-40, -44), S(-14, -48), S(-47, -30), S(-43, -39), S(-43, -36), S(-53, -28), S(-54, -30), S(-55, -46), S(-42, -69), S(-25, -60), S(-55, -55), S(-52, -55), S(-56, -55), S(-66, -48), S(-56, -48), S(-61, -69), S(-72, -66), S(-37, -75), S(-42, -76), S(-42, -70), S(-39, -69), S(-45, -62), S(-57, -73), S(-89, -67), S(-37, -77), S(-24, -66), S(-39, -56), S(-39, -60), S(-38, -58), S(-45, -52), S(-49, -62), S(-53, -65), },
    {S(-1, -4), S(-23, 23), S(-30, 13), S(-62, 18), S(-90, 30), S(-89, 33), S(-62, -7), S(-77, -18), S(-49, 42), S(-129, 87), S(-75, 51), S(-130, 89), S(-136, 75), S(-103, 27), S(-131, 36), S(-98, 1), S(-86, 52), S(-39, 47), S(-45, 45), S(-75, 53), S(-100, 48), S(-91, 16), S(-91, 0), S(-98, 6), S(-74, 54), S(-68, 74), S(-86, 70), S(-98, 60), S(-108, 56), S(-107, 26), S(-94, 26), S(-85, -22), S(-62, 25), S(-79, 22), S(-86, 21), S(-103, 36), S(-100, 30), S(-94, -2), S(-89, -3), S(-86, -31), S(-64, -23), S(-69, -25), S(-86, -10), S(-87, -22), S(-93, -23), S(-88, -18), S(-81, -32), S(-92, -49), S(-71, -68), S(-66, -108), S(-73, -103), S(-80, -35), S(-83, -39), S(-79, -66), S(-83, -54), S(-83, -58), S(-85, -27), S(-83, -91), S(-98, -61), S(-80, -51), S(-81, -53), S(-85, -70), S(-85, -70), S(-87, -50), },
    {S(40, -159), S(78, -25), S(183, -90), S(78, -55), S(133, -43), S(230, -90), S(166, -109), S(56, -241), S(-74, -28), S(56, 46), S(130, 14), S(145, -9), S(195, -25), S(180, 7), S(115, 20), S(66, -38), S(-63, 8), S(113, 44), S(180, 54), S(162, 40), S(140, 46), S(191, 42), S(134, 39), S(92, -10), S(-75, 0), S(32, 37), S(102, 54), S(75, 81), S(50, 88), S(85, 69), S(75, 38), S(-22, 0), S(-146, -4), S(-16, 22), S(-7, 52), S(13, 69), S(1, 76), S(41, 56), S(11, 29), S(-86, -15), S(-132, -12), S(-65, 8), S(-67, 34), S(-57, 43), S(-62, 48), S(-68, 37), S(-68, 20), S(-108, -12), S(-93, -34), S(-66, -7), S(-95, 17), S(-94, 19), S(-121, 26), S(-79, 17), S(-76, 0), S(-98, -6), S(-121, -97), S(-97, -43), S(-178, -10), S(-119, -55), S(-169, -25), S(-112, -16), S(-89, -35), S(-147, -66), },
    {0}  
  };
#else
  const int32_t PSQT[7][64] PROGMEM = {
    {S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(-3, 129), S(-14, 136), S(100, 79), S(161, 71), S(132, 75), S(121, 113), S(144, 122), S(129, 133), S(-14, 49), S(44, 49), S(75, 18), S(40, 36), S(30, 46), S(20, 64), S(7, 83), S(-32, 86), S(-21, -28), S(-1, -22), S(11, -41), S(4, -41), S(-7, -38), S(-17, -14), S(-12, -3), S(-31, 8), S(-21, -47), S(0, -40), S(-12, -50), S(-11, -50), S(-23, -49), S(-21, -47), S(-19, -22), S(-31, -23), S(-13, -55), S(4, -41), S(-11, -45), S(-14, -41), S(-25, -42), S(-29, -43), S(-23, -29), S(-31, -32), S(-14, -59), S(9, -34), S(-3, -30), S(-31, -22), S(-30, -30), S(-35, -27), S(-24, -20), S(-29, -23), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), },
    {S(-70, -133), S(0, -10), S(-76, 32), S(72, -17), S(4, -17), S(-80, 5), S(-91, -23), S(-105, -113), S(55, -58), S(7, -17), S(93, -32), S(62, 4), S(50, 15), S(45, -18), S(10, -28), S(12, -53), S(38, -26), S(57, -1), S(98, 22), S(82, 9), S(51, 23), S(45, 20), S(29, -6), S(-2, -38), S(43, -9), S(19, 30), S(52, 32), S(27, 39), S(54, 30), S(39, 20), S(29, -2), S(23, -35), S(33, -14), S(57, 2), S(30, 26), S(36, 27), S(27, 26), S(21, 21), S(22, -9), S(13, -37), S(12, -52), S(20, -15), S(14, -16), S(30, 0), S(22, 4), S(7, -15), S(6, -26), S(0, -77), S(15, -41), S(-9, -42), S(10, -42), S(3, -19), S(15, -23), S(-2, -40), S(-21, -27), S(-9, -64), S(-28, -127), S(11, -69), S(15, -51), S(14, -43), S(2, -41), S(-25, -60), S(12, -93), S(-62, -109), },
    {S(15, -27), S(72, -49), S(-105, -20), S(-57, -25), S(-53, -19), S(-94, -11), S(-40, -20), S(-8, -16), S(-6, -39), S(-4, -28), S(27, -41), S(13, -34), S(14, -34), S(28, -38), S(36, -32), S(0, -39), S(17, -32), S(64, -35), S(51, -25), S(69, -46), S(47, -45), S(66, -40), S(41, -33), S(25, -33), S(21, -34), S(41, -27), S(59, -40), S(48, -31), S(68, -35), S(42, -45), S(49, -35), S(18, -47), S(34, -48), S(40, -41), S(33, -40), S(51, -40), S(43, -37), S(39, -33), S(33, -52), S(29, -59), S(57, -44), S(43, -57), S(39, -43), S(36, -37), S(39, -39), S(35, -44), S(35, -47), S(26, -58), S(49, -85), S(44, -57), S(30, -65), S(30, -48), S(25, -55), S(41, -63), S(36, -76), S(40, -67), S(38, -63), S(34, -55), S(33, -55), S(22, -58), S(10, -58), S(33, -75), S(41, -54), S(42, -71), },
    {S(59, -26), S(63, -26), S(3, -6), S(-17, -1), S(-23, -4), S(-43, 7), S(-2, -12), S(0, -18), S(23, -35), S(6, -26), S(25, -36), S(-12, -4), S(-4, -6), S(-17, -8), S(-42, -6), S(-29, -13), S(14, -34), S(70, -55), S(55, -34), S(37, -41), S(28, -35), S(2, -20), S(9, -33), S(-32, -18), S(-3, -35), S(14, -42), S(18, -38), S(6, -30), S(16, -35), S(-7, -26), S(-23, -28), S(-35, -29), S(-40, -44), S(-14, -48), S(-47, -30), S(-43, -39), S(-43, -36), S(-53, -28), S(-54, -30), S(-55, -46), S(-42, -69), S(-25, -60), S(-55, -55), S(-52, -55), S(-56, -55), S(-66, -48), S(-56, -48), S(-61, -69), S(-72, -66), S(-37, -75), S(-42, -76), S(-42, -70), S(-39, -69), S(-45, -62), S(-57, -73), S(-89, -67), S(-37, -77), S(-24, -66), S(-39, -56), S(-39, -60), S(-38, -58), S(-45, -52), S(-49, -62), S(-53, -65), },
    {S(-1, -4), S(-23, 23), S(-30, 13), S(-62, 18), S(-90, 30), S(-89, 33), S(-62, -7), S(-77, -18), S(-49, 42), S(-129, 87), S(-75, 51), S(-130, 89), S(-136, 75), S(-103, 27), S(-131, 36), S(-98, 1), S(-86, 52), S(-39, 47), S(-45, 45), S(-75, 53), S(-100, 48), S(-91, 16), S(-91, 0), S(-98, 6), S(-74, 54), S(-68, 74), S(-86, 70), S(-98, 60), S(-108, 56), S(-107, 26), S(-94, 26), S(-85, -22), S(-62, 25), S(-79, 22), S(-86, 21), S(-103, 36), S(-100, 30), S(-94, -2), S(-89, -3), S(-86, -31), S(-64, -23), S(-69, -25), S(-86, -10), S(-87, -22), S(-93, -23), S(-88, -18), S(-81, -32), S(-92, -49), S(-71, -68), S(-66, -108), S(-73, -103), S(-80, -35), S(-83, -39), S(-79, -66), S(-83, -54), S(-83, -58), S(-85, -27), S(-83, -91), S(-98, -61), S(-80, -51), S(-81, -53), S(-85, -70), S(-85, -70), S(-87, -50), },
    {S(40, -159), S(78, -25), S(183, -90), S(78, -55), S(133, -43), S(230, -90), S(166, -109), S(56, -241), S(-74, -28), S(56, 46), S(130, 14), S(145, -9), S(195, -25), S(180, 7), S(115, 20), S(66, -38), S(-63, 8), S(113, 44), S(180, 54), S(162, 40), S(140, 46), S(191, 42), S(134, 39), S(92, -10), S(-75, 0), S(32, 37), S(102, 54), S(75, 81), S(50, 88), S(85, 69), S(75, 38), S(-22, 0), S(-146, -4), S(-16, 22), S(-7, 52), S(13, 69), S(1, 76), S(41, 56), S(11, 29), S(-86, -15), S(-132, -12), S(-65, 8), S(-67, 34), S(-57, 43), S(-62, 48), S(-68, 37), S(-68, 20), S(-108, -12), S(-93, -34), S(-66, -7), S(-95, 17), S(-94, 19), S(-121, 26), S(-79, 17), S(-76, 0), S(-98, -6), S(-121, -97), S(-97, -43), S(-178, -10), S(-119, -55), S(-169, -25), S(-112, -16), S(-89, -35), S(-147, -66), },
    {0}  
  };
#endif
