#include <stdint.h>
#include <ctype.h>
#include <stdlib.h>
#include <string.h>

#define MakeScore(mg, eg) ((int32_t)((uint32_t)(eg) << 16) + (mg))
#define S(mg, eg) MakeScore((mg), (eg))
#define MgScore(s) ((int16_t)((uint16_t)((uint32_t)((s)))))
#define EgScore(s) ((int16_t)((uint16_t)((uint32_t)((s) + 0x8000) >> 16)))

// PSQT are in the pov of BLACK
// Makes it easier to visualize cuz no mirroring is required (remember A1 is 0 and H8 is 63)

#ifdef DEV
  const int32_t PSQT[7][64] = {
    {S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(-6, 129), S(-19, 135), S(89, 80), S(149, 71), S(119, 76), S(109, 114), S(134, 122), S(120, 134), S(-17, 49), S(35, 49), S(64, 19), S(34, 36), S(25, 45), S(16, 64), S(4, 83), S(-33, 85), S(-21, -28), S(-2, -22), S(6, -41), S(1, -42), S(-9, -38), S(-20, -15), S(-14, -4), S(-32, 7), S(-20, -47), S(0, -41), S(-13, -50), S(-13, -50), S(-24, -50), S(-22, -47), S(-21, -22), S(-31, -24), S(-12, -56), S(4, -42), S(-11, -45), S(-14, -42), S(-26, -42), S(-29, -44), S(-24, -30), S(-30, -33), S(-13, -60), S(9, -34), S(-4, -29), S(-30, -22), S(-30, -30), S(-35, -28), S(-24, -21), S(-28, -24), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), },
    {S(-62, -136), S(2, -12), S(-72, 30), S(72, -18), S(6, -18), S(-80, 5), S(-94, -23), S(-101, -114), S(59, -60), S(6, -18), S(95, -33), S(65, 3), S(50, 14), S(38, -17), S(5, -28), S(6, -53), S(46, -28), S(66, -4), S(101, 20), S(91, 6), S(53, 21), S(40, 20), S(23, -6), S(-6, -38), S(48, -10), S(34, 24), S(55, 30), S(34, 35), S(49, 31), S(34, 20), S(24, -2), S(19, -35), S(29, -13), S(52, 3), S(27, 26), S(29, 28), S(21, 26), S(16, 21), S(16, -9), S(7, -36), S(7, -51), S(17, -15), S(11, -15), S(25, 0), S(17, 4), S(3, -15), S(1, -26), S(-5, -76), S(9, -41), S(-12, -42), S(5, -41), S(0, -18), S(10, -23), S(-6, -40), S(-26, -27), S(-14, -65), S(-32, -128), S(6, -68), S(9, -50), S(9, -42), S(-1, -41), S(-29, -59), S(8, -92), S(-66, -109), },
    {S(20, -27), S(81, -49), S(-89, -20), S(-45, -25), S(-55, -18), S(-99, -10), S(-47, -19), S(-10, -17), S(12, -43), S(5, -30), S(33, -40), S(20, -35), S(5, -32), S(20, -38), S(29, -34), S(-3, -42), S(38, -34), S(81, -37), S(66, -26), S(76, -45), S(51, -46), S(56, -40), S(33, -34), S(20, -35), S(30, -34), S(35, -25), S(65, -40), S(48, -28), S(75, -36), S(44, -45), S(41, -37), S(12, -49), S(30, -46), S(33, -40), S(27, -39), S(52, -40), S(41, -36), S(38, -33), S(30, -52), S(23, -60), S(52, -43), S(38, -58), S(35, -45), S(32, -38), S(37, -40), S(30, -44), S(32, -47), S(24, -57), S(44, -86), S(40, -59), S(24, -66), S(25, -50), S(19, -57), S(38, -64), S(31, -75), S(40, -67), S(32, -64), S(32, -58), S(28, -57), S(17, -60), S(6, -60), S(30, -77), S(43, -55), S(39, -69), },
    {S(77, -32), S(85, -32), S(24, -11), S(2, -6), S(-8, -8), S(-34, 4), S(4, -14), S(3, -19), S(39, -38), S(29, -30), S(50, -41), S(2, -6), S(6, -8), S(-11, -7), S(-39, -5), S(-32, -10), S(27, -36), S(86, -58), S(70, -36), S(28, -37), S(18, -31), S(-7, -17), S(-1, -30), S(-42, -16), S(0, -36), S(21, -42), S(17, -36), S(-5, -27), S(4, -33), S(-19, -25), S(-33, -28), S(-46, -29), S(-38, -45), S(-7, -49), S(-43, -29), S(-54, -37), S(-55, -35), S(-63, -29), S(-64, -31), S(-64, -48), S(-40, -71), S(-20, -61), S(-53, -55), S(-61, -54), S(-65, -56), S(-76, -49), S(-65, -50), S(-70, -72), S(-70, -69), S(-34, -76), S(-45, -75), S(-51, -70), S(-49, -70), S(-55, -65), S(-67, -75), S(-97, -70), S(-42, -80), S(-26, -66), S(-46, -55), S(-48, -61), S(-47, -59), S(-55, -54), S(-59, -65), S(-62, -69), },
    {S(2, 37), S(-9, 53), S(-12, 47), S(-42, 48), S(-85, 55), S(-88, 50), S(-68, 14), S(-85, 3), S(-49, 77), S(-125, 108), S(-64, 84), S(-112, 105), S(-139, 85), S(-109, 33), S(-138, 37), S(-108, 5), S(-48, 83), S(-13, 70), S(-18, 74), S(-77, 73), S(-103, 50), S(-105, 8), S(-105, -12), S(-109, -8), S(-67, 81), S(-75, 95), S(-81, 85), S(-102, 69), S(-106, 42), S(-110, 7), S(-104, -1), S(-95, -48), S(-66, 42), S(-85, 27), S(-91, 26), S(-109, 25), S(-109, 23), S(-100, -20), S(-97, -22), S(-96, -57), S(-69, -18), S(-75, -27), S(-93, -17), S(-98, -42), S(-100, -42), S(-99, -32), S(-91, -52), S(-100, -66), S(-79, -69), S(-76, -111), S(-84, -114), S(-92, -61), S(-95, -62), S(-89, -84), S(-93, -66), S(-92, -76), S(-93, -31), S(-92, -93), S(-110, -72), S(-92, -75), S(-92, -78), S(-96, -92), S(-94, -86), S(-99, -59), },
    {S(41, -157), S(91, -26), S(183, -90), S(95, -57), S(138, -41), S(231, -87), S(159, -108), S(66, -242), S(-71, -28), S(50, 47), S(128, 15), S(138, -8), S(198, -26), S(183, 7), S(115, 21), S(65, -36), S(-59, 8), S(107, 45), S(177, 54), S(162, 40), S(137, 47), S(187, 43), S(134, 39), S(102, -10), S(-65, -1), S(26, 38), S(93, 55), S(67, 81), S(39, 89), S(82, 69), S(70, 39), S(-16, 0), S(-139, -4), S(-28, 24), S(-22, 54), S(-4, 71), S(-15, 78), S(30, 57), S(6, 29), S(-74, -16), S(-128, -12), S(-75, 9), S(-81, 36), S(-79, 46), S(-81, 50), S(-80, 38), S(-72, 19), S(-97, -13), S(-87, -34), S(-68, -9), S(-104, 18), S(-102, 19), S(-128, 26), S(-84, 16), S(-79, 0), S(-88, -7), S(-107, -95), S(-86, -46), S(-170, -12), S(-107, -59), S(-160, -28), S(-101, -18), S(-81, -36), S(-136, -65), },
    {0}
  
  };
#else
  const int32_t PSQT[7][64] PROGMEM = {
    {S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(-87, 223), S(21, 218), S(95, 154), S(128, 127), S(40, 155), S(5, 207), S(23, 232), S(36, 238), S(-43, 85), S(13, 67), S(92, 15), S(48, 33), S(0, 59), S(11, 87), S(-24, 110), S(-55, 118), S(-39, -30), S(-5, -34), S(3, -57), S(15, -68), S(5, -55), S(-19, -34), S(-8, -14), S(-34, 5), S(-58, -61), S(4, -63), S(15, -85), S(16, -81), S(18, -80), S(-6, -73), S(-11, -43), S(-52, -32), S(-5, -70), S(62, -73), S(-4, -72), S(24, -71), S(4, -62), S(-2, -73), S(-1, -51), S(-37, -44), S(9, -73), S(85, -70), S(39, -58), S(3, -53), S(-4, -45), S(-4, -50), S(25, -47), S(-27, -31), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), },
    {S(-149, -114), S(-155, -32), S(-133, -38), S(87, -55), S(-66, -18), S(-45, -28), S(-47, -73), S(-316, -5), S(65, -75), S(61, -49), S(164, -64), S(188, -66), S(86, -28), S(176, -56), S(4, -26), S(-50, -41), S(48, -32), S(140, -51), S(227, -38), S(172, -41), S(137, -3), S(65, 8), S(71, -36), S(37, -42), S(115, -33), S(67, 3), S(114, 5), S(86, 17), S(143, 15), S(66, 6), S(82, 2), S(85, -27), S(53, -6), S(89, -25), S(110, -8), S(101, 18), S(82, 14), S(76, 11), S(59, -9), S(58, -24), S(45, -49), S(109, -36), S(74, -20), S(101, -1), S(71, 7), S(73, -24), S(45, -11), S(40, -38), S(76, -37), S(49, -37), S(63, -19), S(57, -17), S(81, -20), S(50, -32), S(25, -33), S(49, -48), S(-28, -32), S(55, -41), S(63, -13), S(64, -27), S(52, -9), S(17, -28), S(65, -37), S(-16, -73), },
    {S(-57, -34), S(1, -59), S(-33, -46), S(-147, -29), S(-80, -33), S(-17, -57), S(-32, -65), S(0, -43), S(60, -86), S(28, -40), S(111, -68), S(40, -45), S(19, -58), S(6, -43), S(44, -45), S(1, -58), S(99, -58), S(101, -45), S(110, -34), S(108, -51), S(42, -25), S(101, -43), S(35, -39), S(17, -32), S(39, -48), S(72, -56), S(23, -35), S(66, -26), S(80, -22), S(59, -35), S(61, -31), S(-2, -27), S(54, -63), S(61, -57), S(59, -33), S(95, -36), S(89, -41), S(69, -29), S(46, -45), S(50, -55), S(112, -66), S(82, -67), S(94, -45), S(81, -35), S(76, -31), S(76, -39), S(82, -44), S(103, -73), S(77, -69), S(128, -54), S(70, -50), S(65, -37), S(48, -43), S(68, -59), S(103, -74), S(51, -50), S(101, -74), S(76, -76), S(60, -45), S(68, -49), S(59, -44), S(92, -78), S(48, -51), S(94, -86), },
    {S(89, -42), S(196, -68), S(246, -79), S(179, -57), S(120, -42), S(123, -35), S(127, -40), S(101, -27), S(130, -61), S(194, -63), S(182, -59), S(80, -41), S(132, -41), S(78, -24), S(20, -5), S(33, -24), S(155, -67), S(201, -71), S(173, -68), S(127, -62), S(122, -51), S(54, -36), S(62, -32), S(45, -28), S(111, -59), S(122, -61), S(107, -55), S(58, -44), S(87, -49), S(68, -37), S(41, -39), S(-1, -24), S(54, -66), S(65, -60), S(67, -56), S(33, -40), S(27, -34), S(-5, -25), S(-3, -30), S(3, -34), S(67, -71), S(97, -83), S(76, -69), S(50, -55), S(58, -56), S(34, -48), S(16, -43), S(1, -45), S(-2, -45), S(96, -62), S(46, -44), S(60, -51), S(53, -44), S(34, -37), S(34, -48), S(9, -42), S(76, -91), S(36, -49), S(66, -48), S(72, -51), S(61, -32), S(56, -40), S(37, -38), S(32, -38), },
    {S(11, 47), S(40, -15), S(148, -10), S(190, -51), S(101, 3), S(94, -20), S(15, 12), S(7, -18), S(264, -138), S(57, 59), S(175, 43), S(-43, 86), S(-72, 118), S(-29, 37), S(-26, -2), S(-4, 0), S(156, -35), S(225, -68), S(150, -5), S(85, 74), S(66, 0), S(40, 20), S(0, -13), S(0, -42), S(83, 13), S(32, 52), S(34, 77), S(14, 81), S(11, 41), S(9, 0), S(24, -2), S(-1, -32), S(45, 12), S(62, 14), S(44, 9), S(36, 24), S(20, 38), S(30, -11), S(24, -9), S(28, -38), S(54, 1), S(67, 17), S(62, -5), S(31, 1), S(51, -41), S(23, 14), S(58, -89), S(26, -68), S(95, -44), S(90, -88), S(62, -84), S(62, -16), S(52, -19), S(66, -65), S(61, -42), S(42, -23), S(99, -99), S(10, -35), S(44, -51), S(53, -40), S(82, -128), S(57, -77), S(39, -54), S(68, -57), },
    {S(31, -76), S(70, -24), S(140, -22), S(160, -37), S(109, -37), S(154, -54), S(114, -53), S(124, -118), S(-53, 0), S(47, 38), S(218, 26), S(122, 14), S(123, 6), S(162, 2), S(231, -10), S(62, -53), S(-34, 6), S(174, 38), S(165, 60), S(71, 63), S(182, 41), S(111, 40), S(266, -5), S(74, -47), S(-100, 3), S(20, 35), S(11, 72), S(10, 86), S(54, 82), S(110, 41), S(59, 2), S(15, -58), S(-175, -2), S(-64, 29), S(-113, 80), S(-68, 88), S(-75, 84), S(33, 47), S(58, -7), S(50, -72), S(-139, -11), S(-41, 17), S(-103, 58), S(-125, 68), S(-110, 63), S(-113, 48), S(7, -3), S(-30, -61), S(-77, -38), S(-7, -10), S(-64, 26), S(-100, 37), S(-118, 40), S(-47, 14), S(-71, -6), S(-26, -60), S(-144, -85), S(-66, -71), S(-154, -26), S(-69, -57), S(-158, -25), S(-101, -38), S(-101, -56), S(-272, -51), },
    {0}
};
#endif
